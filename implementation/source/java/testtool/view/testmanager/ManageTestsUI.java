
package testtool.view.testmanager;

import java.awt.BorderLayout;
import java.awt.Dialog;
import java.awt.FlowLayout;
import java.awt.Window;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import testtool.TestTool;
import testtool.model.testmanager.Test;
import testtool.view.TestToolScreen;

/**
 * Class ManageTestsUI provides the user with a way to modify and remove tests
 * from the database.
 * 
 * @author Peter Georgiev
 */
public class ManageTestsUI extends TestToolScreen {

   /**
    * Creates new form ManageTestsUI.
    */
   public ManageTestsUI() {
      super("TestTool / Manage Tests");
      initComponents();
      
      TestTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
   }

   /**
    * Creates new form ManageTestsUI. 
    * 
    * @param testmanager TestManager object is passed to the function.
    */
   public ManageTestsUI(TestTool testtool) {
      super("TestTool / Manage Tests");
      initComponents();
      
      TestTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
      this.model = testtool;
      
      testList = model.testmanager.getList();
      DefaultTableModel table = (DefaultTableModel) TestTable.getModel();
      
      for(int i = 0; i < testList.size(); i++)
            table.addRow(testList.get(i).toArray());
   }

   /**
    * This method is called from within the constructor to initialize the form. WARNING: Do NOT
    * modify this code. The content of this method is always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      SearchField = new javax.swing.JTextField();
      jScrollPane7 = new javax.swing.JScrollPane();
      TestTable = new javax.swing.JTable();
      ButtonView = new javax.swing.JButton();
      ButtonView.setEnabled(false);
      ButtonEdit = new javax.swing.JButton();
      ButtonEdit.setEnabled(false);
      ButtonDelete = new javax.swing.JButton();
      ButtonDelete.setEnabled(false);
      SearchButton = new javax.swing.JButton();
      AdvancedSearchButton = new javax.swing.JButton();
      PublishButton = new javax.swing.JButton();

      SearchField.setMinimumSize(new java.awt.Dimension(10, 28));
      SearchField.setPreferredSize(new java.awt.Dimension(10, 28));
      SearchField.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            SearchFieldActionPerformed(evt);
         }
      });

      TestTable.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][] {

         },
         new String [] {
            "Title", "Course", "Number of questions", "Introduction", "Created By", "Created On"
         }
      ) {
         boolean[] canEdit = new boolean [] {
            false, false, true, false, false, false
         };

         public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
         }
      });
      TestTable.setRowHeight(20);
      TestTable.setSurrendersFocusOnKeystroke(true);
      TestTable.getTableHeader().setReorderingAllowed(false);
      TestTable.addMouseListener(new java.awt.event.MouseAdapter() {
         public void mouseClicked(java.awt.event.MouseEvent evt) {
            TestTableMouseClicked(evt);
         }
      });
      jScrollPane7.setViewportView(TestTable);

      ButtonView.setText("View");
      ButtonView.setMaximumSize(new java.awt.Dimension(92, 28));
      ButtonView.setMinimumSize(new java.awt.Dimension(92, 28));
      ButtonView.setPreferredSize(new java.awt.Dimension(92, 28));
      ButtonView.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonViewActionPerformed(evt);
         }
      });

      ButtonEdit.setText("Edit");
      ButtonEdit.setMaximumSize(new java.awt.Dimension(92, 28));
      ButtonEdit.setMinimumSize(new java.awt.Dimension(92, 28));
      ButtonEdit.setPreferredSize(new java.awt.Dimension(92, 28));
      ButtonEdit.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonEditActionPerformed(evt);
         }
      });

      ButtonDelete.setText("Delete");
      ButtonDelete.setMaximumSize(new java.awt.Dimension(92, 28));
      ButtonDelete.setMinimumSize(new java.awt.Dimension(92, 28));
      ButtonDelete.setPreferredSize(new java.awt.Dimension(92, 28));
      ButtonDelete.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonDeleteActionPerformed(evt);
         }
      });

      SearchButton.setText("Search");
      SearchButton.setMaximumSize(new java.awt.Dimension(86, 27));
      SearchButton.setMinimumSize(new java.awt.Dimension(86, 27));
      SearchButton.setPreferredSize(new java.awt.Dimension(86, 27));
      SearchButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            SearchButtonActionPerformed(evt);
         }
      });

      AdvancedSearchButton.setText("...");
      AdvancedSearchButton.setMaximumSize(new java.awt.Dimension(50, 27));
      AdvancedSearchButton.setMinimumSize(new java.awt.Dimension(50, 27));
      AdvancedSearchButton.setPreferredSize(new java.awt.Dimension(50, 27));
      AdvancedSearchButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            AdvancedSearchButtonActionPerformed(evt);
         }
      });

      PublishButton.setText("Publish");
      PublishButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            PublishButtonActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
               .addGroup(layout.createSequentialGroup()
                  .addComponent(SearchField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(AdvancedSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ButtonView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(35, 35, 35)
            .addComponent(ButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(35, 35, 35)
            .addComponent(ButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(35, 35, 35)
            .addComponent(PublishButton)
            .addGap(215, 215, 215))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(AdvancedSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(ButtonView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(ButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(ButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(PublishButton))
            .addContainerGap(18, Short.MAX_VALUE))
      );
   }// </editor-fold>//GEN-END:initComponents

   /**
    * It gets the text entered in the search field.
    * 
    * @param evt Action Event is passed to the method.
    */
   private void SearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchFieldActionPerformed
      SearchButtonActionPerformed(evt);
   }//GEN-LAST:event_SearchFieldActionPerformed

   /**
    * When an element in the table is selected all the buttons  
    * 
    * @param evt Action Event is passed to the method.
    */
   private void TestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TestTableMouseClicked
      //System.out.println("HIT!: " + Arrays.toString(QuestionTable.getSelectedRows()));
      if (TestTable.getSelectedRowCount() == 1) {
         ButtonView.setEnabled(true);
         ButtonEdit.setEnabled(true);
         ButtonDelete.setEnabled(true);
         PublishButton.setEnabled(true);
      } else if (TestTable.getSelectedRowCount() > 1) {
         ButtonView.setEnabled(false);
         ButtonEdit.setEnabled(false);
         ButtonDelete.setEnabled(true);
         PublishButton.setEnabled(true);
      } else {
         ButtonView.setEnabled(false);
         ButtonEdit.setEnabled(false);
         ButtonDelete.setEnabled(false);
         PublishButton.setEnabled(false);
      }
   }//GEN-LAST:event_TestTableMouseClicked

   /**
    * Opens a new dialog that shows the selected test. This method is called when the View button
    * is selected.
    * 
    * @param evt Action Event is passed to the method.
    */
   private void ButtonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonViewActionPerformed
     displayNewDialog(new ViewTestUI(model.testmanager.getActiveTest()));
   }//GEN-LAST:event_ButtonViewActionPerformed

   /**
    * Opens a new dialog that will be used to edit the selected test. This method is called when 
    * the Edit button is selected.
    * 
    * @param evt Action Event is passed to the method.
    */
   private void ButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditActionPerformed
      displayNewDialog(new EditTestUI(model));
   }//GEN-LAST:event_ButtonEditActionPerformed

   /**
    * Deletes the selected test when the Delete button is pressed.
    * 
    * @param evt Action Event is passed to the method.
    */
   private void ButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDeleteActionPerformed
      DefaultTableModel table = (DefaultTableModel) TestTable.getModel();
      int index = TestTable.getSelectedRow();
      int dialogResult = JOptionPane.showConfirmDialog (null, 
         "Are you sure you want to permanently delete the selected tests?", "Warning", 
         JOptionPane.YES_NO_OPTION,
         JOptionPane.WARNING_MESSAGE);
     
      if(dialogResult == JOptionPane.YES_OPTION) {
         table.removeRow(index);
         model.testmanager.deleteTest(testList.get(index));
      }
   }//GEN-LAST:event_ButtonDeleteActionPerformed
   
   /**
    * Searches the database for test that match the keywords entered in the search field. This
    * method is called when the Search button is pressed.
    * 
    * @param evt Action Event is passed to the method.
    */
   private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
      DefaultTableModel table = (DefaultTableModel) TestTable.getModel();
      
      while (table.getRowCount() > 0)
         table.removeRow(0);
      
      testList = model.testmanager.search(SearchField.getText().toLowerCase());

      if (testList.isEmpty()) {
         JOptionPane.showMessageDialog(null,
            "Sorry! No results were found using term: " + SearchField.getText().toUpperCase() +
               ". Try using different keywords",
            "Attention",
            JOptionPane.WARNING_MESSAGE);
      }
      else {
         for(int i = 0; i < testList.size(); i++)
            table.addRow(testList.get(i).toArray());
      }
   }//GEN-LAST:event_SearchButtonActionPerformed

   /**
    * Creates new dialog that is used to do an advanced search. In other words, it will have a 
    * more complex criteria for searching the database.
    * 
    * @param evt Action Event is passed to the method.
    */
   private void AdvancedSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdvancedSearchButtonActionPerformed
      Window window = SwingUtilities.getWindowAncestor(this);
      JFrame frame = (JFrame) window;

      JDialog test = new JDialog(frame, Dialog.ModalityType.DOCUMENT_MODAL);
      test.getContentPane().setLayout(new FlowLayout());
      test.setTitle("Test Tool / Manage Tests / Advanced Search");

      TestSearchUI panel = new TestSearchUI(model.testmanager);
      test.getContentPane().add(panel, BorderLayout.EAST);

      //test.setUndecorated(true);
      //test.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
      test.setResizable(false);

      test.pack();
      test.setVisible(true);
   }//GEN-LAST:event_AdvancedSearchButtonActionPerformed

   private void PublishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PublishButtonActionPerformed
      DefaultTableModel table = (DefaultTableModel) TestTable.getModel();
      int index = TestTable.getSelectedRow();
     
      JOptionPane.showMessageDialog(null,
            "Sorry! Work in progress... ",
            "Attention",
            JOptionPane.WARNING_MESSAGE);
      
      model.testmanager.publishTest(testList.get(index));
   }//GEN-LAST:event_PublishButtonActionPerformed

   private TestTool model;
   private ArrayList<Test> testList;
   
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton AdvancedSearchButton;
   private javax.swing.JButton ButtonDelete;
   private javax.swing.JButton ButtonEdit;
   private javax.swing.JButton ButtonView;
   private javax.swing.JButton PublishButton;
   private javax.swing.JButton SearchButton;
   private javax.swing.JTextField SearchField;
   private javax.swing.JTable TestTable;
   private javax.swing.JScrollPane jScrollPane7;
   // End of variables declaration//GEN-END:variables
}
