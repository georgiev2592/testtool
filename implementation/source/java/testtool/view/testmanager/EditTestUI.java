/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testtool.view.testmanager;

import java.util.Collection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import testtool.TestTool;
import testtool.model.questionmanager.Question;
import testtool.model.questionmanager.QuestionDifficulty;
import testtool.model.questionmanager.QuestionType;
import testtool.view.TestToolDialog;

/**
 *
 * @author PetarGeorgiev
 */
public class EditTestUI extends TestToolDialog {

   /**
    * Creates new form EditTestUI
    */
   public EditTestUI(TestTool model) {
      super("Manage Tests / Edit Test");
      
      initComponents();
      
      this.model = model;
      initJTableFromModel();
   }

   /**
    * This method is called from within the constructor to initialize the form. WARNING: Do NOT
    * modify this code. The content of this method is always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jScrollPane7 = new javax.swing.JScrollPane();
      dbTable = new javax.swing.JTable();
      jScrollPane8 = new javax.swing.JScrollPane();
      testTable = new javax.swing.JTable();
      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      saveButton = new javax.swing.JButton();

      dbTable.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][] {

         },
         new String [] {
            "Prompt", "Type", "Course", "Author", "Difficulty", "Time"
         }
      ) {
         boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false
         };

         public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
         }
      });
      dbTable.setRowHeight(20);
      dbTable.setSurrendersFocusOnKeystroke(true);
      dbTable.getTableHeader().setReorderingAllowed(false);
      dbTable.addMouseListener(new java.awt.event.MouseAdapter() {
         public void mouseClicked(java.awt.event.MouseEvent evt) {
            dbTableMouseClicked(evt);
         }
      });
      jScrollPane7.setViewportView(dbTable);

      testTable.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][] {

         },
         new String [] {
            "Prompt", "Type", "Course", "Author", "Difficulty", "Time"
         }
      ) {
         boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false
         };

         public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
         }
      });
      testTable.setRowHeight(20);
      testTable.setSurrendersFocusOnKeystroke(true);
      testTable.getTableHeader().setReorderingAllowed(false);
      testTable.addMouseListener(new java.awt.event.MouseAdapter() {
         public void mouseClicked(java.awt.event.MouseEvent evt) {
            testTableMouseClicked(evt);
         }
      });
      jScrollPane8.setViewportView(testTable);

      jLabel1.setText("Question Database");

      jLabel2.setText("Test Questions");

      saveButton.setText("Save");
      saveButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            saveButtonActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel1)
               .addComponent(jLabel2))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(saveButton)
            .addGap(420, 420, 420))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addGap(18, 18, 18)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel2)
            .addGap(18, 18, 18)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(saveButton)
            .addContainerGap(19, Short.MAX_VALUE))
      );
   }// </editor-fold>//GEN-END:initComponents

   private void dbTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dbTableMouseClicked
      //System.out.println("HIT!: " + Arrays.toString(QuestionTable.getSelectedRows()));
      if (dbTable.getSelectedRowCount() == 1) 
         saveButton.setEnabled(true);
      else 
         saveButton.setEnabled(false);
   }//GEN-LAST:event_dbTableMouseClicked

   private void testTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testTableMouseClicked
      // TODO add your handling code here:
   }//GEN-LAST:event_testTableMouseClicked

   private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
      JOptionPane.showMessageDialog(null,
         "Sorry! Work in progress... ",
         "Attention",
         JOptionPane.WARNING_MESSAGE);
   }//GEN-LAST:event_saveButtonActionPerformed

   private void initJTableFromModel() {
      DefaultTableModel table = (DefaultTableModel) dbTable.getModel();
      Collection<Question> questions;
      
      model.questionmanager.searchQuestion(null, null, model.testmanager.getActiveTest().getCourse(), null, null);
      
      for (Question question: model.questionmanager.getQuestionList()) 
         table.addRow(question.toArray()); 
   }
   
   private void updateJTableFromModel() {
      DefaultTableModel table = (DefaultTableModel) dbTable.getModel();
        
      for (Question question: model.testmanager.getActiveTest().getQuestions()) 
         table.addRow(question.toArray());   
   }
       
   private TestTool model;
   
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JTable dbTable;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JScrollPane jScrollPane7;
   private javax.swing.JScrollPane jScrollPane8;
   private javax.swing.JButton saveButton;
   private javax.swing.JTable testTable;
   // End of variables declaration//GEN-END:variables
}
