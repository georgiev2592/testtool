/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testtool.view.testtaking;

import javax.swing.ButtonGroup;
import javax.swing.JRadioButton;
import testtool.model.grademanager.AnswerSubmission;
import testtool.model.questionmanager.Answer;
import testtool.model.testmanager.PublishedQuestion;
/**
 *
 * @author Eliane
 */
public class MultipleChoiceUI extends QuestionViewUI {

    // display the submitted answer
    public void showSubmittedAnswer(AnswerSubmission submission) {
        for (JRadioButton r : buttons) {
            if (r.getText() == submission.answer) {
                r.setSelected(true);
            }
        }
    }
    // If false don't let them change the answer
    public void setAnswerEditable(boolean isEditable) {
        if (!isEditable) {
            for (JRadioButton r : buttons) {
                r.setEnabled(false);
            }
        }
    }

    public AnswerSubmission getSubmittedAnswer(){
        int selected = -1;
        int index = 0;
        for (JRadioButton j : buttons) {
            if (j.isSelected()) {
                selected = index;
            }
            index++;
        }
        if (selected == -1) {
            return null;
        }
        AnswerSubmission submission = new AnswerSubmission();
        submission.answer = question.answers.toArray(new Answer[0])[selected].response;
        submission.gradeScore = 0;
        submission.isGraded = false;
        return submission;
    }

    // Shows corret answer separately from the current submitted answer
    // useful for grade and question manager
    public void showCorrectAnswer() {
        String correctAnswerText = "Correct Answer: ";
        int num = 0;
        for (Answer a : question.answers) {
            if (a.isCorrect) {
                if (num != 0) {
                    correctAnswerText += " or ";
                }
                correctAnswerText += a.response;
                num++;
            }
        }
        if (num == 0) {
            correctAnswerText += "None";
        }
        AnswerLabel.setText(correctAnswerText);
    }
   
    private PublishedQuestion question;
    private ButtonGroup group;
    private JRadioButton[] buttons;
    /**
     * Creates new form MultipleChoiceUI
     */
    public MultipleChoiceUI(PublishedQuestion quesiton) {
        initComponents();
        this.question = quesiton;
        group = new ButtonGroup();
        AnswerLabel.setText("");
        
        PromptArea.setText(question.prompt);
        PromptArea.setEditable(false);
        int index = 0;
        buttons = new JRadioButton[question.answers.size()];
        for (Answer a : question.answers) {
            buttons[index] = new JRadioButton(a.response);
            group.add(buttons[index]);
            ChoicePanel.add(buttons[index]);
            index++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        PromptArea = new javax.swing.JTextArea();
        ChoicePanel = new javax.swing.JPanel();
        AnswerLabel = new javax.swing.JLabel();

        jRadioButton1.setText("jRadioButton1");

        PromptArea.setColumns(20);
        PromptArea.setRows(5);
        jScrollPane2.setViewportView(PromptArea);

        ChoicePanel.setLayout(new javax.swing.BoxLayout(ChoicePanel, javax.swing.BoxLayout.Y_AXIS));

        AnswerLabel.setText("CorrectAnswer");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ChoicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AnswerLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ChoicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AnswerLabel)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AnswerLabel;
    private javax.swing.JPanel ChoicePanel;
    private javax.swing.JTextArea PromptArea;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
